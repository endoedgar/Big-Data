USE DEFREITAS DNS PROXY SERVER FOR HOSTNAME RESOLVING FROM HOST ON LINUX
docker run --rm --hostname dns.mageddo \
-v /var/run/docker.sock:/var/run/docker.sock \
-v /etc/resolv.conf:/etc/resolv.conf \
defreitas/dns-proxy-server

RUNNING THE HADOOP CONTAINER
docker run -it sequenceiq/hadoop-docker:2.7.0 /etc/bootstrap.sh -bash

cd ~
mkdir tst
cd tst
$HADOOP_PREFIX/bin/hadoop fs -mkdir /user/cloudera /user/cloudera/pairs /user/cloudera/pairs/input
echo "B11 C31 D76 A12 B11 C31 D76 C31 A10 B12 D76 C31" > file
echo "D76 D76 B12 B11 C31 D76 B12 C31 B11 A12 C31 B12" >> file
echo "Hadoop is an elephant" > file0
echo "Hadoop is as yellow as can be" > file1
echo "Oh what a yellow fellow is Hadoop" > file2
$HADOOP_PREFIX/bin/hadoop fs -put file* /user/cloudera/wordcount/input 
$HADOOP_PREFIX/bin/hadoop jar wordCount.jar net.endoedgar.WordCount /user/cloudera/wordcount/input /user/cloudera/wordcount/output

RESTART EVERYTHING
sed -i '/<configuration>/a    <property>\n        <name>yarn.log-aggregation-enable</name>\n        <value>true</value>\n    </property>' $HADOOP_PREFIX/etc/hadoop/yarn-site.xml
$HADOOP_PREFIX/sbin/stop-dfs.sh && $HADOOP_PREFIX/sbin/stop-yarn.sh
$HADOOP_PREFIX/sbin/start-dfs.sh && $HADOOP_PREFIX/sbin/start-yarn.sh
$HADOOP_PREFIX/sbin/mr-jobhistory-daemon.sh stop historyserver
$HADOOP_PREFIX/sbin/mr-jobhistory-daemon.sh start historyserver

